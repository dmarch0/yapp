version: '3.8'

services:
  proxy:
    build: ../../services/proxy/local
    restart: unless-stopped
    networks:
      - base
    ports:
      - 3000:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  core:
    build:
      context: ../../services/core
      dockerfile: build/local/Dockerfile
    networks:
      - base
    depends_on:
      - postgres
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.core.rule=Host(`localhost`) && PathPrefix(`/api`)
      - traefik.http.routers.core.entrypoints=http
      - traefik.http.services.core.loadbalancer.server.port=3001

  web-client:
    build: ../../services/web-client/build/local
    networks:
      - base
    volumes:
      - "../../services/web-client:/app"
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.web-client.rule=Host(`localhost`)
      - traefik.http.routers.web-client.entrypoints=http
      - traefik.http.services.web-client.loadbalancer.server.port=3000

  postgres:
      image: postgres:15.0
      environment:
        POSTGRES_DB: "yapp"
        POSTGRES_USER: "admin"
        POSTGRES_PASSWORD: "admin"
        PGDATA: "/data"
      networks:
       - "base"
      ports:
        - "5432:5432"
      volumes:
        - "postgres:/data"

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:6.15
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    networks:
      - base
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: always

volumes:
  postgres: {}
  pgadmin: {}

networks:
  base: